stages:
  - build
  - notify
  - release

include:
  - template: Security/SAST.gitlab-ci.yml

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

cache:
  paths:
    - frontend/dist/frontend

build-frontend-code-job:
  stage: build
  script:
    - cd frontend
    - npm install
    - npm run build
  only:
    changes:
    - frontend/**/*
  artifacts:
    paths:
      - frontend/dist/frontend/*

upload-frontend-release:
  stage: release 
  script:
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - >
     curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}"
     --upload-file sausage-store-${VERSION}.tar.gz
     ${NEXUS_REPO_URL_FRONTEND}/${NEXUS_REPO_FRONTEND_NAME}/${VERSION}/sausage-store-${VERSION}.tar.gz
  only:
    changes:
    - frontend/**/*

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  variables:
    GIT_DEPTH: "0"
  rules:
    - changes:
      - frontend/**/*
  script:
    - sonar-scanner -Dsonar.projectName="22_ДаниилПайдютов_ФРОНТЕНД" -Dsonar.sources=./frontend -Dsonar.projectKey=$SONAR_PROJECT_KEY_FRONT -Dsonar.host.url=$SONARQUBE_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.qualitygate.wait=true

telegram-notification-frontend:
  stage: notify
  only:
    changes:
    - frontend/**/*
    variables:
    - $CI_COMMIT_MESSAGE =~ /send notification/
  script:
    - |
     curl -X POST -H 'Content-Type: application/json' -d '{"chat_id": "-1001771539978", "text": "Frontend project build for std-022-039. Checkout -> ", "parse_mode": "markdown", "reply_markup": {"inline_keyboard": [[{"text": "@GrantRusov", "url": "'"$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_SHA/download?job=build-frontend-code-job"'"}]]}}' https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage
  needs:
      - build-frontend-code-job
