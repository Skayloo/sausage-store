stages:
  - build
  - notify
  - release
  - deploy
  
include:
  - template: Security/SAST.gitlab-ci.yml

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  JAVA_OPTS: -XX:MaxRAMPercentage=90
  VERSION: 1.0.${CI_PIPELINE_ID}

cache:
  paths:
    - ${CI_PROJECT_DIR}/.m2/repository

backend-deploy:
  stage: deploy
  before_script:
    #устанавливаем ssh-agent для удобства аутентификации по ssh
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    #сохраняем сгенеренный ранее приватный ключ для раннера
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp ./backend/sausage-store-backend.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store-backend.service
    - ssh ${DEV_USER}@${DEV_HOST} "export "CURRENT_VERSION=${VERSION}"; export "VERSION=${VERSION}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_REPO_URL_BACKEND=${NEXUS_REPO_URL_BACKEND}"; export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";setsid /bin/bash -s " < ./backend/deploy.sh

backend-build:
  stage: build
  script:
    - cd backend
    - >
     mvn package 
     -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository
     -Dversion.application=${VERSION}
  artifacts:
    paths:
      - backend/target/sausage-store-${VERSION}.jar
      - ${CI_PROJECT_DIR}/.m2/
  rules:
    - changes:
      - backend/**/*

backend-upload-release:
  stage: release 
  script:
    - cd backend
    - >
     mvn deploy -DskipTests
     -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository
     -s settings.xml -Dversion.application=${VERSION}
  rules:
    - changes:
      - backend/**/*

spotbugs-sast:
  stage: test
  rules:
    - changes:
      - backend/**/*
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 11
    MAVEN_REPO_PATH: "${CI_PROJECT_DIR}/.m2/repository"

sonarqube-backend-sast:
  stage: test
  image: maven:3.8-openjdk-16
  variables:
    GIT_DEPTH: "0"
  rules:
    - changes:
      - backend/**/*
  script:
    - mvn -f ${CI_PROJECT_DIR}/backend -X verify sonar:sonar -Dsonar.projectName="22_ДаниилПайдютов_БЭКЕНД" -Dsonar.projectKey=$SONAR_PROJECT_KEY_BACK -Dsonar.host.url=$SONARQUBE_URL -Dsonar.login=$SONAR_LOGIN  -Dsonar.qualitygate.wait=true

telegram-notification-backend:
  stage: notify
  only:
    changes:
    - backend/**/*
    variables:
    - $CI_COMMIT_MESSAGE =~ /send notification/
  script:
    - |
     curl -X POST -H 'Content-Type: application/json' -d '{"chat_id": "-1001771539978", "text": "Backend project build for std-022-039. Checkout link below ", "parse_mode": "markdown", "reply_markup": {"inline_keyboard": [[{"text": "@GrantRusov", "url": "'"$CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_SHA/download?job=build-backend-code-job"'"}]]}}' https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage
  needs:
    - backend-build
